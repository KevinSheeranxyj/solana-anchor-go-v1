{
    "version": "0.0.0",
    "name": "auction",
    "docs": [],
    "ref": "https://github.com/metaplex-foundation/metaplex/blob/4a1b7d2f674013bc8bd3149294c66b03b27120d0/rust/auction/program/src/instruction.rs",
    "instructions": [
        {
            "name": "CancelBid",
            "docs": [
                "Cancel a bid on a running auction."
            ],
            "accounts": [
                {
                    "name": "bidderPrimaryAccount",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "The bidders primary account, for PDA calculation/transit auth."
                    ]
                },
                {
                    "name": "bidderTokenAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The bidders token account they'll receive refund with"
                    ]
                },
                {
                    "name": "pot",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The pot, containing a reference to the stored SPL token account."
                    ]
                },
                {
                    "name": "potSPL",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The pot SPL account, where the tokens will be deposited."
                    ]
                },
                {
                    "name": "metadata",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The metadata account, storing information about the bidders actions."
                    ]
                },
                {
                    "name": "auction",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Auction account, containing data about the auction and item being bid on."
                    ]
                },
                {
                    "name": "tokenMint",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Token mint, for transfer instructions and verification."
                    ]
                },
                {
                    "name": "clock",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Clock sysvar"
                    ]
                },
                {
                    "name": "rent",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar"
                    ]
                },
                {
                    "name": "systemProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "System program"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "SPL Token Program"
                    ]
                }


            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "CancelBidArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "CreateAuction",
            "docs": [
                "Create a new auction account bound to a resource, initially in a pending state."
            ],
            "accounts": [
                {
                    "name": "creator",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "The account creating the auction, which is authorised to make changes."
                    ]
                },
                {
                    "name": "auction",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Uninitialized auction account."
                    ]
                },
                {
                    "name": "rent",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar"
                    ]
                },
                {
                    "name": "systemProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "System program"
                    ]
                }

            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "CreateAuctionArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "ClaimBid",
            "docs": [
                "Move SPL tokens from winning bid to the destination account."
            ],
            "accounts": [
                {
                    "name": "destination",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The destination account"
                    ]
                },
                {
                    "name": "bidderPotToken",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The bidder pot token account"
                    ]
                },
                {
                    "name": "bidderPotPDA",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The bidder pot pda account [seed of ['auction', program_id, auction key, bidder key]]"
                    ]
                },
                {
                    "name": "auctionAuthority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "The authority on the auction"
                    ]
                },
                {
                    "name": "auction",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The auction"
                    ]
                },
                {
                    "name": "bidderWallet",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The bidder wallet"
                    ]
                },
                {
                    "name": "tokenMint",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token mint of the auction"
                    ]
                },
                {
                    "name": "clock",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Clock sysvar"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                }

            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "ClaimBidArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "EndAuction",
            "docs": [
                "Ends an auction, regardless of end timing conditions"
            ],
            "accounts": [],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "EndAuctionArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "StartAuction",
            "docs": [
                "Start an inactive auction."
            ],
            "accounts": [
                {
                    "name": "creator",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "The creator/authorised account."
                    ]
                },
                {
                    "name": "auction",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized auction account."
                    ]
                },
                {
                    "name": "clock",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Clock sysvar"
                    ]
                }

            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "StartAuctionArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "SetAuthority",
            "docs": [
                "Update the authority for an auction account.",
                "https://github.com/metaplex-foundation/metaplex/blob/4a1b7d2f674013bc8bd3149294c66b03b27120d0/rust/auction/program/src/instruction.rs#L115"
            ],
            "accounts": [
                {
                    "name": "auction",
                    "isMut": true,
                    "isSigner": false,
                    "docs": []
                },
                {
                    "name": "authority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": []
                },
                {
                    "name": "newAuthority",
                    "isMut": false,
                    "isSigner": false,
                    "docs": []
                }

            ],
            "args": []
        },
        {
            "name": "PlaceBid",
            "docs": [
                "Place a bid on a running auction."
            ],
            "accounts": [
                {
                    "name": "bidderPrimaryAccount",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "The bidders primary account, for PDA calculation/transit auth."
                    ]
                },
                {
                    "name": "bidderTokenAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The bidders token account they'll pay with"
                    ]
                },
                {
                    "name": "pot",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The pot, containing a reference to the stored SPL token account."
                    ]
                },
                {
                    "name": "potSPL",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The pot SPL account, where the tokens will be deposited."
                    ]
                },
                {
                    "name": "metadata",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The metadata account, storing information about the bidders actions."
                    ]
                },
                {
                    "name": "auction",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Auction account, containing data about the auction and item being bid on."
                    ]
                },
                {
                    "name": "tokenMint",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Token mint, for transfer instructions and verification."
                    ]
                },
                {
                    "name": "transferAuthority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Transfer authority, for moving tokens into the bid pot."
                    ]
                },
                {
                    "name": "payer",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Payer"
                    ]
                },
                {
                    "name": "clock",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Clock sysvar"
                    ]
                },
                {
                    "name": "rent",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar"
                    ]
                },
                {
                    "name": "systemProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "System program"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "SPL Token Program"
                    ]
                }

            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "PlaceBidArgs"
                    },
                    "docs": []
                }

            ]
        }









    ],
    "accounts": [],
    "types": [
        {
            "name": "CancelBidArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "resource",
                        "type": "publicKey",
                        "docs": []
                    }

                ]
            }
        },
        {
            "name": "CreateAuctionArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "winners",
                        "type":
                        {
                            "defined": "WinnerLimit"
                        },
                        "docs": [
                            "How many winners are allowed for this auction. See AuctionData."
                        ]
                    },
                    {
                        "name": "end_auction_at",
                        "type":
                        {
                            "option": "unixTimestamp"
                        },
                        "docs": [
                            "End time is the cut-off point that the auction is forced to end by. See AuctionData."
                        ]
                    },
                    {
                        "name": "end_auction_gap",
                        "type":
                        {
                            "option": "unixTimestamp"
                        },
                        "docs": [
                            "Gap time is how much time after the previous bid where the auction ends. See AuctionData."
                        ]
                    },
                    {
                        "name": "token_mint",
                        "type": "publicKey",
                        "docs": [
                            "Token mint for the SPL token used for bidding."
                        ]
                    },
                    {
                        "name": "authority",
                        "type": "publicKey",
                        "docs": [
                            "Authority"
                        ]
                    },
                    {
                        "name": "resource",
                        "type": "publicKey",
                        "docs": [
                            "The resource being auctioned. See AuctionData."
                        ]
                    },
                    {
                        "name": "price_floor",
                        "type":
                        {
                            "defined": "PriceFloor"
                        },
                        "docs": [
                            "Set a price floor."
                        ]
                    },
                    {
                        "name": "tick_size",
                        "type":
                        {
                            "option": "u64"
                        },
                        "docs": [
                            "Add a tick size increment"
                        ]
                    },
                    {
                        "name": "gap_tick_size_percentage",
                        "type":
                        {
                            "option": "u8"
                        },
                        "docs": [
                            "Add a minimum percentage increase each bid must meet."
                        ]
                    }

                ]
            }
        },
        {
            "name": "WinnerLimit",
            "type":
            {
                "kind": "enum",
                "variants": [
                    {
                        "name": "Unlimited",
                        "fields": [
                            {
                                "name": "n",
                                "type": "i64",
                                "docs": []
                            }

                        ]
                    },
                    {
                        "name": "Capped",
                        "fields": [
                            {
                                "name": "limit",
                                "type": "i64",
                                "docs": []
                            }

                        ]
                    }

                ]
            }
        },
        {
            "name": "PriceFloor",
            "docs": [
                "Structure with pricing floor data."
            ],
            "type":
            {
                "kind": "enum",
                "variants": [
                    {
                        "name": "None",
                        "fields": [
                        {
                            "name": "v",
                            "type":
                            {
                                "array": [
                                    "u8",
                                    32
                                ]
                            },
                            "docs": [
                                "No price floor, any bid is valid."
                            ]
                        }]
                    },
                    {
                        "name": "MinimumPrice",
                        "fields": [
                        {
                            "name": "v",
                            "type":
                            {
                                "array": [
                                    "u64",
                                    4
                                ]
                            },
                            "docs": [
                                "Explicit minimum price, any bid below this is rejected."
                            ]
                        }]
                    },
                    {
                        "name": "BlindedPrice",
                        "fields": [
                        {
                            "name": "v",
                            "type": "hash",
                            "docs": [
                                "Hidden minimum price, revealed at the end of the auction."
                            ]
                        }]
                    }

                ]
            }
        },
        {
            "name": "ClaimBidArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "resource",
                        "type": "publicKey",
                        "docs": []
                    }

                ]
            }
        },
        {
            "name": "EndAuctionArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "resource",
                        "type": "publicKey",
                        "docs": [
                            "The resource being auctioned. See AuctionData."
                        ]
                    },
                    {
                        "name": "reveal",
                        "type":
                        {
                            "option":
                            {
                                "defined": "Revealer"
                            }
                        },
                        "docs": [
                            "If the auction was blinded, a revealing price must be specified to release the auction",
                            "winnings."
                        ]
                    }

                ]
            }
        },
        {
            "name": "Revealer",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "Price",
                        "type": "u64",
                        "docs": []
                    },
                    {
                        "name": "Salt",
                        "type": "u64",
                        "docs": []
                    }

                ]
            }
        },
        {
            "name": "StartAuctionArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "resource",
                        "type": "publicKey",
                        "docs": [
                            "The resource being auctioned. See AuctionData."
                        ]
                    }

                ]
            }
        },
        {
            "name": "PlaceBidArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "amount",
                        "type": "u64",
                        "docs": [
                            "Size of the bid being placed. The user must have enough SOL to satisfy this amount."
                        ]
                    },
                    {
                        "name": "resource",
                        "type": "publicKey",
                        "docs": [
                            "Resource being bid on."
                        ]
                    }

                ]
            }
        }



    ],
    "events": [],
    "errors": [],
    "metadata":
    {
        "address": ""
    }
}
