{
    "version": "0.0.0",
    "name": "token-vault",
    "docs": [],
    "ref": "https://github.com/metaplex-foundation/metaplex/blob/e9841d4bb121fbea784ff60c83ddd3bb1a26d220/rust/token-vault/program/src/instruction.rs",
    "instructions": [
        {
            "name": "InitVault",
            "docs": [
                "Initialize a token vault, starts inactivate. Add tokens in subsequent instructions, then activate."
            ],
            "accounts": [
            {
                "name": "fractionalShareMint",
                "isMut": true,
                "isSigner": false,
                "docs": [
                    "Initialized fractional share mint with 0 tokens in supply, authority on mint must be pda of program with seed [prefix, programid]"
                ]
            },
            {
                "name": "redeemTreasuryTokenAccount",
                "isMut": true,
                "isSigner": false,
                "docs": [
                    "Initialized redeem treasury token account with 0 tokens in supply, owner of account must be pda of program like above"
                ]
            },
            {
                "name": "fractionTreasuryTokenAccount",
                "isMut": true,
                "isSigner": false,
                "docs": [
                    "Initialized fraction treasury token account with 0 tokens in supply, owner of account must be pda of program like above"
                ]
            },
            {
                "name": "uninitializedVaultAccount",
                "isMut": true,
                "isSigner": false,
                "docs": [
                    "Uninitialized vault account"
                ]
            },
            {
                "name": "vaultAuthority",
                "isMut": false,
                "isSigner": false,
                "docs": [
                    "Authority on the vault"
                ]
            },
            {
                "name": "pricingLookupAddress",
                "isMut": false,
                "isSigner": false,
                "docs": [
                    "Pricing Lookup Address"
                ]
            },
            {
                "name": "tokenProgram",
                "isMut": false,
                "isSigner": false,
                "docs": [
                    "Token program"
                ]
            },
            {
                "name": "rentSysvar",
                "isMut": false,
                "isSigner": false,
                "docs": [
                    "Rent sysvar"
                ]
            }],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "InitVaultArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "AddTokenToInactiveVault",
            "docs": [
                "Add a token to a inactive token vault"
            ],
            "accounts": [
                {
                    "name": "uninitializedSafetyDepositBoxAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Uninitialized safety deposit box account address (will be created and allocated by this endpoint)",
                        "Address should be pda with seed of [PREFIX, vault_address, token_mint_address]"
                    ]
                },
                {
                    "name": "initializedTokenAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized Token account"
                    ]
                },
                {
                    "name": "initializedTokenStoreAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized Token store account with authority of this program, this will get set on the safety deposit box"
                    ]
                },
                {
                    "name": "initializedInactiveFractionalizedTokenVault",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized inactive fractionalized token vault"
                    ]
                },
                {
                    "name": "vaultAuthority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Authority on the vault"
                    ]
                },
                {
                    "name": "payer",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Payer"
                    ]
                },
                {
                    "name": "transferAuthority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Transfer Authority to move desired token amount from token account to safety deposit"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                },
                {
                    "name": "rentSysvar",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar"
                    ]
                },
                {
                    "name": "systemAccountSysvar",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "System account sysvar"
                    ]
                }

            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "AmountArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "ActivateVault",
            "docs": [
                "Activates the vault, distributing initial shares into the fraction treasury.",
                "Tokens can no longer be removed in this state until Combination."
            ],
            "accounts": [
                {
                    "name": "initializedInactivatedFractionalizedTokenVault",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized inactivated fractionalized token vault"
                    ]
                },
                {
                    "name": "fractionMint",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction mint"
                    ]
                },
                {
                    "name": "fractionTreasury",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction treasury"
                    ]
                },
                {
                    "name": "fractionMintAuthority",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Fraction mint authority for the program - seed of [PREFIX, program_id]"
                    ]
                },
                {
                    "name": "authorityOnTheVault",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Authority on the vault"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                }

            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "NumberOfShareArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "CombineVault",
            "docs": [
                "This act checks the external pricing oracle for permission to combine and the price of the circulating market cap to do so.",
                "If you can afford it, this amount is charged and placed into the redeem treasury for shareholders to redeem at a later time.",
                "The treasury then unlocks into Combine state and you can remove the tokens."
            ],
            "accounts": [
                {
                    "name": "initializedActivatedTokenVault",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized activated token vault"
                    ]
                },
                {
                    "name": "tokenAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Token account containing your portion of the outstanding fraction shares"
                    ]
                },
                {
                    "name": "redeemTreasuryMintTypeTokenAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Token account of the redeem_treasury mint type that you will pay with"
                    ]
                },
                {
                    "name": "fractionMint",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction mint"
                    ]
                },
                {
                    "name": "fractionTreasuryAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction treasury account"
                    ]
                },
                {
                    "name": "redeemTreasuryAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Redeem treasury account"
                    ]
                },
                {
                    "name": "newAuthorityOnTheVault",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "New authority on the vault going forward - can be same authority if you want"
                    ]
                },
                {
                    "name": "authorityOnTheVault",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Authority on the vault"
                    ]
                },
                {
                    "name": "transferAuthority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Transfer authority for the token account and outstanding fractional shares account you're transferring from"
                    ]
                },
                {
                    "name": "pdaBasedBurnAuthority",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "PDA-based Burn authority for the fraction treasury account containing the uncirculated shares seed [PREFIX, program_id]"
                    ]
                },
                {
                    "name": "externalPricingLookupAddress",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "External pricing lookup address"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                }


            ],
            "args": []
        },
        {
            "name": "RedeemShares",
            "docs": [
                "If in the combine state, shareholders can hit this endpoint to burn shares in exchange for monies from the treasury.",
                "Once fractional supply is zero and all tokens have been removed this action will take vault to Deactivated"
            ],
            "accounts": [
                {
                    "name": "initializedTokenAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized Token account containing your fractional shares"
                    ]
                },
                {
                    "name": "initializedDestinationTokenAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized Destination token account where you wish your proceeds to arrive"
                    ]
                },
                {
                    "name": "fractionMint",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction mint"
                    ]
                },
                {
                    "name": "redeemTreasuryAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Redeem treasury account"
                    ]
                },
                {
                    "name": "pdaBasedTransferAuthority",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "PDA-based Transfer authority for the transfer of proceeds from redeem treasury to destination seed [PREFIX, program_id]"
                    ]
                },
                {
                    "name": "burnAuthority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Burn authority for the burning of your shares"
                    ]
                },
                {
                    "name": "combinedTokenVault",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Combined token vault"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                },
                {
                    "name": "rentSysvar",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar"
                    ]
                }


            ],
            "args": []
        },
        {
            "name": "WithdrawTokenFromSafetyDepositBox",
            "docs": [
                "If in combine state, authority on vault can hit this to withdrawal some of a token type from a safety deposit box.",
                "Once fractional supply is zero and all tokens have been removed this action will take vault to Deactivated"
            ],
            "accounts": [
                {
                    "name": "initializedDestinationAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized Destination account for the tokens being withdrawn"
                    ]
                },
                {
                    "name": "safetyDepositBoxAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The safety deposit box account key for the tokens"
                    ]
                },
                {
                    "name": "storeKey",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The store key on the safety deposit box account"
                    ]
                },
                {
                    "name": "initializedCombinedTokenVault",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The initialized combined token vault"
                    ]
                },
                {
                    "name": "fractionMint",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Fraction mint"
                    ]
                },
                {
                    "name": "authorityOfVault",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Authority of vault"
                    ]
                },
                {
                    "name": "pdaBasedTransferAuthority",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "PDA-based Transfer authority to move the tokens from the store to the destination seed [PREFIX, program_id]"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                },
                {
                    "name": "rentSysvar",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar"
                    ]
                }


            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "AmountArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "MintFractionalShares",
            "docs": [
                "Self explanatory - mint more fractional shares if the vault is configured to allow such."
            ],
            "accounts": [
                {
                    "name": "fractionTreasury",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction treasury"
                    ]
                },
                {
                    "name": "fractionMint",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction mint"
                    ]
                },
                {
                    "name": "initializedActiveTokenVault",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The initialized active token vault"
                    ]
                },
                {
                    "name": "pDABasedMintAuthority",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "PDA-based Mint authority to mint tokens to treasury[PREFIX, program_id]"
                    ]
                },
                {
                    "name": "authorityOfVault",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Authority of vault"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                }


            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "NumberOfShareArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "WithdrawSharesFromTreasury",
            "docs": [
                "Withdraws shares from the treasury to a desired account."
            ],
            "accounts": [
                {
                    "name": "initializedDestinationAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized Destination account for the shares being withdrawn"
                    ]
                },
                {
                    "name": "fractionTreasury",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction treasury"
                    ]
                },
                {
                    "name": "initializedActiveTokenVault",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The initialized active token vault"
                    ]
                },
                {
                    "name": "pDABasedTransferAuthority",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "PDA-based Transfer authority to move tokens from treasury to your destination[PREFIX, program_id]"
                    ]
                },
                {
                    "name": "authorityOfVault",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Authority of vault"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                },
                {
                    "name": "rentSysvar",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar"
                    ]
                }


            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "NumberOfShareArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "AddSharesToTreasury",
            "docs": [
                "Returns shares to the vault if you wish to remove them from circulation."
            ],
            "accounts": [
                {
                    "name": "sourceInitializedAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Initialized account from which shares will be withdrawn"
                    ]
                },
                {
                    "name": "fractionTreasury",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "Fraction treasury"
                    ]
                },
                {
                    "name": "initializedActiveTokenVault",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The initialized active token vault"
                    ]
                },
                {
                    "name": "transferAuthority",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Transfer authority to move tokens from your account to treasury"
                    ]
                },
                {
                    "name": "authorityOfVault",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "Authority of vault"
                    ]
                },
                {
                    "name": "tokenProgram",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Token program"
                    ]
                }


            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "NumberOfShareArgs"
                    },
                    "docs": []
                }

            ]
        },
        {
            "name": "UpdateExternalPriceAccount",
            "docs": [
                "Helpful method that isn't necessary to use for main users of the app, but allows one to create/update",
                "existing external price account fields if they are signers of this account.",
                "Useful for testing purposes, and the CLI makes use of it as well so that you can verify logic."
            ],
            "accounts": [
                {
                    "name": "externalPriceAccount",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "External price account"
                    ]
                }


            ],
            "args": [
                {
                    "name": "args",
                    "type":
                    {
                        "defined": "ExternalPriceAccount"
                    },
                    "docs": []
                }

            ]
        }






    ],
    "accounts": [],
    "types": [
        {
            "name": "InitVaultArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "allow_further_share_creation",
                        "type": "bool",
                        "docs": []
                    }

                ]
            }
        },
        {
            "name": "AmountArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "amount",
                        "type": "u64",
                        "docs": []
                    }

                ]
            }
        },
        {
            "name": "NumberOfShareArgs",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "number_of_shares",
                        "type": "u64",
                        "docs": []
                    }

                ]
            }
        },
        {
            "name": "ExternalPriceAccount",
            "type":
            {
                "kind": "struct",
                "fields": [
                    {
                        "name": "key",
                        "type":
                        {
                            "defined": "Key"
                        },
                        "docs": []
                    },
                    {
                        "name": "price_per_share",
                        "type": "u64",
                        "docs": []
                    },
                    {
                        "name": "price_mint",
                        "type": "publicKey",
                        "docs": [
                            "Mint of the currency we are pricing the shares against, should be same as redeem_treasury.",
                            "Most likely will be USDC mint most of the time."
                        ]
                    },
                    {
                        "name": "allowed_to_combine",
                        "type": "bool",
                        "docs": [
                            "Whether or not combination has been allowed for this vault."
                        ]
                    }

                ]
            }
        },
        {
            "name": "Key",
            "docs": [],
            "type":
            {
                "kind": "enum",
                "variants": [
                    {
                        "name": "Uninitialized",
                        "docs": []
                    },
                    {
                        "name": "SafetyDepositBoxV1",
                        "docs": []
                    },
                    {
                        "name": "ExternalAccountKeyV1",
                        "docs": []
                    },
                    {
                        "name": "VaultV1",
                        "docs": []
                    }

                ]
            }
        }

    ],
    "events": [],
    "errors": [],
    "metadata":
    {
        "address": ""
    }
}
