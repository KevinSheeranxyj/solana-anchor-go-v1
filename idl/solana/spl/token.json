{
    "version": "0.0.0",
    "name": "token",
    "docs": [
        "A Token program on the Solana blockchain.",
        "This program defines a common implementation for Fungible and Non Fungible tokens."
    ],
    "instructions": [
        {
            "name": "InitializeMint",
            "docs": [
                "Initializes a new mint and optionally deposits all the newly minted",
                "tokens in an account.",
                "",
                "The `InitializeMint` instruction requires no signers and MUST be",
                "included within the same Transaction as the system program's",
                "`CreateAccount` instruction that creates the account being initialized.",
                "Otherwise another party can acquire ownership of the uninitialized",
                "account."
            ],
            "accounts": [
                {
                    "name": "mint",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The mint to initialize."
                    ]
                },
                {
                    "name": "$(SysVarRentPubkey)",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar."
                    ]
                }

            ],
            "args": [
                {
                    "name": "decimals",
                    "type": "u8",
                    "docs": [
                        "Number of base 10 digits to the right of the decimal place."
                    ]
                },
                {
                    "name": "mint_authority",
                    "type": "publicKey",
                    "docs": [
                        "The authority/multisignature to mint tokens."
                    ]
                },
                {
                    "name": "freeze_authority",
                    "type":
                    {
                        "option": "publicKey"
                    },
                    "docs": [
                        "The freeze authority/multisignature of the mint."
                    ]
                }

            ]
        },
        {
            "name": "InitializeAccount",
            "docs": [
                "Initializes a new account to hold tokens.  If this account is associated",
                "with the native mint then the token balance of the initialized account",
                "will be equal to the amount of SOL in the account. If this account is",
                "associated with another mint, that mint must be initialized before this",
                "command can succeed.",
                "",
                "The `InitializeAccount` instruction requires no signers and MUST be",
                "included within the same Transaction as the system program's",
                "`CreateAccount` instruction that creates the account being initialized.",
                "Otherwise another party can acquire ownership of the uninitialized",
                "account."
            ],
            "accounts": [
                {
                    "name": "account",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The account to initialize."
                    ]
                },
                {
                    "name": "mint",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The mint this account will be associated with."
                    ]
                },
                {
                    "name": "owner",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "The new account's owner/multisignature."
                    ]
                },
                {
                    "name": "$(SysVarRentPubkey)",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar."
                    ]
                }

            ],
            "args": [

            ]
        },
        {
            "name": "InitializeMultisig",
            "docs": [
                "Initializes a multisignature account with N provided signers.",
                "",
                "Multisignature accounts can used in place of any single owner/delegate",
                "accounts in any token instruction that require an owner/delegate to be",
                "present.  The variant field represents the number of signers (M)",
                "required to validate this multisignature account.",
                "",
                "The `InitializeMultisig` instruction requires no signers and MUST be",
                "included within the same Transaction as the system program's",
                "`CreateAccount` instruction that creates the account being initialized.",
                "Otherwise another party can acquire ownership of the uninitialized",
                "account."
            ],
            "accounts": [
                {
                    "name": "account",
                    "isMut": true,
                    "isSigner": false,
                    "docs": [
                        "The multisignature account to initialize."
                    ]
                },
                {
                    "name": "$(SysVarRentPubkey)",
                    "isMut": false,
                    "isSigner": false,
                    "docs": [
                        "Rent sysvar."
                    ]
                },
                {
                    "name": "signers",
                    "isMut": false,
                    "isSigner": true,
                    "docs": [
                        "..2+N The signer accounts, must equal to N where 1 <= N <=11"
                    ]
                }

            ],
            "args": [
                {
                    "name": "m",
                    "type": "u8",
                    "docs": [
                        "The number of signers (M) required to validate this multisignature",
                        "account."
                    ]
                }

            ]
        },
        {
          "name": "Transfer",
          "docs": [
            "Transfers tokens from one account to another either directly or via a",
            "delegate.  If this account is associated with the native mint then equal",
            "amounts of SOL and Tokens will be transferred to the destination",
            "account."
          ],
          "accounts": [
            {
              "name": "source",
              "isMut": true,
              "isSigner": false,
              "docs": [
                "The source account."
              ]
            },
            {
              "name": "destination",
              "isMut": true,
              "isSigner": false,
              "docs": [
                "The destination account."
              ]
            },
            {
              "name": "owner",
              "isMut": false,
              "isSigner": false,
              "docs": [
                "The source account owner/delegate."
              ]
            },
            {
              "variadic": true,
              "name": "signers",
              "isMut": false,
              "isSigner": true,
              "docs": [
                "M signer accounts."
              ]
            }

          ],
          "args": [
            {
              "name": "amount",
              "type": "u64",
              "docs": [
                "The amount of tokens to transfer."
              ]
            }
            
          ]
        },
        {
          "name": "Approve",
          "docs": [
            "Approves a delegate.  A delegate is given the authority over tokens on",
            "behalf of the source account's owner."
          ],
          "accounts": [
            {
              "name": "source",
              "isMut": true,
              "isSigner": false,
              "docs": [
                "The source account."
              ]
            },
            {
              "name": "delegate",
              "isMut": false,
              "isSigner": false,
              "docs": [
                "The delegate."
              ]
            },
            {
              "name": "owner",
              "isMut": false,
              "isSigner": false,
              "docs": [
                "The source account owner."
              ]
            },
            {
              "name": "signers",
              "isMut": false,
              "isSigner": true,
              "docs": [
                "M signer accounts."
              ]
            }

          ],
          "args": [
            {
              "name": "amount",
              "type": "u64",
              "docs": [
                ""
              ]
            }
            
          ]
        }





    ],
    "accounts": [],
    "state":
    {},
    "types": [],
    "events": [],
    "errors": [],
    "metadata":
    {
        "address": ""
    }
}
